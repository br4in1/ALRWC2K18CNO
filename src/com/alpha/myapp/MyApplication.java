package com.alpha.myapp;

import com.alpha.Entite.SimpleUser;
import com.alpha.Service.ServiceUser;
import com.alpha.gui.NewsfeedForm;
import com.alpha.gui.SignInForm;
import com.codename1.db.Cursor;
import com.codename1.db.Database;
import com.codename1.db.Row;
import static com.codename1.ui.CN.*;

import com.codename1.ui.Form;
import com.codename1.ui.Dialog;

import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.Toolbar;
import java.io.IOException;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {

	private Form current;
	private Resources theme;

	public void init(Object context) {
		theme = UIManager.initFirstTheme("/theme");

		// Enable Toolbar on all Forms by default
		Toolbar.setGlobalToolbar(false);
	}

	public void start() {
		if (current != null) {
			current.show();
			return;
		}
		Database db;
		try {
			db = Database.openOrCreate("Russia2018.db");
			db.execute("create table if not exists appstates (loggedin NUMBER, loggeduserid NUMBER);");
			Cursor cur = db.executeQuery("select * from appstates");
			int user_id = -1;
			int loggedin = -1;
			while (cur.next()) {
				Row r = cur.getRow();
				loggedin = r.getInteger(0);
				if (loggedin == 1) {
					user_id = r.getInteger(1);
				}
			}
			if (loggedin == 1 && user_id != -1) {
				ServiceUser ser = new ServiceUser();
				SimpleUser.current_user = ser.getUserData(user_id);
				NewsfeedForm h = new NewsfeedForm(theme);
				h.show();
			} else {
				SignInForm h = new SignInForm(theme);
				h.show();
			}
		} catch (IOException ex) {
		}
		/*ConnectionRequest con = new ConnectionRequest();
        con.setUrl("http://41.226.11.243:10004/tasks/");
        NetworkManager.getInstance().addToQueue(con);
        con.addResponseListener(new ActionListener<NetworkEvent>() {
            @Override
            public void actionPerformed(NetworkEvent evt) {
                ServiceTask ser = new ServiceTask();
                List<Task> list = ser.getListTask(new String(con.getResponseData()));
                System.out.println(list);  
            }
        });*/
	}

	public void stop() {
		current = getCurrentForm();
		if (current instanceof Dialog) {
			((Dialog) current).dispose();
			current = getCurrentForm();
		}
	}

	public void destroy() {
	}

}
